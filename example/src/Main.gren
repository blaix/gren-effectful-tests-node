module Main exposing (main)


import Task
import Test exposing (describe, test)
import Expect
import Test.Runner.Effectful exposing (Program, run, await, awaitError)
import Time


main : Program
main = run
    [ await Time.now "write tests that depend on result of task" <| \now ->
        describe "nest a full test suite if you want"
            [ test "it is not Jan 1, 1970" <| \_ ->
                Expect.notEqual (Time.millisToPosix 0) now
            ]

    , await (Task.fail "oops") "task that fails unexpectedly" <| \_ ->
        test "the suite will fail and this test will never run" <| \_ ->
            Expect.equal True True

    , awaitError (Task.fail "failure") "task that you expect to fail" <| \error ->
        test "make assertions on errors" <| \_ ->
            Expect.equal "failure" error
    ]
